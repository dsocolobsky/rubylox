module Rubylox
  class Parser
    attr_reader tokens: Array[Token]
    attr_reader current: Integer

    def initialize: (Array[Token] tokens) -> void
    def parse: () -> [statement]

    def parse_statement: () -> statement
    def parse_statement_print: () -> PrintStmt
    def parse_statement_expression: () -> ExpressionStmt
    def parse_equality: () -> expression
    def parse_comparison: () -> expression
    def parse_term: () -> expression
    def parse_factor: () -> expression
    def parse_unary: () -> expression
    def parse_primary: () -> expression

    def expression: () -> expression

    def match: (*untyped types) -> bool
    def consume: (untyped `type`, untyped message) -> untyped
    def error: (untyped token, untyped message) -> untyped
    def report: (untyped line, untyped where, untyped message) -> ::String
    def synchronize: () -> (nil | untyped)
    def peek_is?: (untyped `type`) -> (false | untyped)
    def advance: () -> untyped
    def at_end?: () -> untyped
    def peek: () -> untyped
    def previous: () -> untyped
  end
end
