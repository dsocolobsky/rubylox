module Rubylox
  class LoxCallable
    def call: (Interpreter interpreter, [Object] arguments) -> Object
  end

  class LoxFunction
    attr_reader declaration: FunctionStmt
    attr_reader closure: Environment
    attr_reader is_initializer: bool

    def initialize: (FunctionStmt declaration, Environment closure, bool is_initializer) -> void
    def arity: () -> int
    def call: (Interpreter interpreter, [Object] arguments) -> Object?
    def bind: (LoxInstance) -> LoxFunction
    def functions_object: () -> Object
  end

  class ReturnException < StandardError
    attr_reader value: Object
    def initialize: (Object value, string? message) -> void
  end
end
